<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Heci的博客</title><link>https://jyulox.github.io</link><description>我是Heci，分享生活日常的博主</description><copyright>Heci的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/218713057?v=4</url><title>avatar</title><link>https://jyulox.github.io</link></image><lastBuildDate>Fri, 04 Jul 2025 13:44:50 +0000</lastBuildDate><managingEditor>Heci的博客</managingEditor><ttl>60</ttl><webMaster>Heci的博客</webMaster><item><title>计算机二级c++程序设计每日一练(1)</title><link>https://jyulox.github.io/post/ji-suan-ji-er-ji-c%2B%2B-cheng-xu-she-ji-mei-ri-yi-lian-%281%29.html</link><description># 一、单项选择题
&gt;过题可勾选题干左边进行标记

- [ ] 1、下列符号中可以用作c++标识符的的是

   (A) _radius

   (B) foo~bar

   \(C\) else

   (D) 3room

- [ ] 2、下列语句中，错误的是
      
   (A) const int buffer=256;

   (B) const int temp;

   \(C\) const double *point;
 
   (D) const double *rt=new double(5.5);

- [ ] 3、有如下语句序列:
   ```c++int x = 3;
   do{
	   x-=2;
	   cout&lt;&lt;x;
     }while(!(--x));
   ```
   运行时的输出结果是
      (A) 1
      (B) 30
      \(C\) 1-2
      \(D\) 死循环

- [ ] 4、有如下语句序列：
    ```c++
       int k = 1,num = 26;
       do{
	        k *= num % 10;
	        num/=10;
         }while(num);
     ```

运行后变量k的值是

         (A) 2
     
         (B) 12
     
         (C) 60
     
         (D) 18         

- [ ] 5、下列关于c++函数的叙述中，正确的是：
      
   \(A\) 内联函数就是定义在另一个函数体内部的函数

   \(B\) 函数体的最后一条语句必须是return语句

   \(C\) C++要求在调用一个函数之前，必须先对其进行原型声明或定义

   \(D\) 编译器会根据函数的返回值类型和参数表来区分函数的不同重载形式

- [ ] 6、运算符重载是对已有的运算符赋予多重含义，下列关于运算符重载的叙述中，正确的是
      
   \(A\) 可以对基本类型（如int类型）的数据。</description><guid isPermaLink="true">https://jyulox.github.io/post/ji-suan-ji-er-ji-c%2B%2B-cheng-xu-she-ji-mei-ri-yi-lian-%281%29.html</guid><pubDate>Fri, 04 Jul 2025 13:44:21 +0000</pubDate></item><item><title>wwx的第一次测试</title><link>https://jyulox.github.io/post/wwx-de-di-yi-ci-ce-shi.html</link><description>Hello wwx~。</description><guid isPermaLink="true">https://jyulox.github.io/post/wwx-de-di-yi-ci-ce-shi.html</guid><pubDate>Fri, 04 Jul 2025 09:28:20 +0000</pubDate></item></channel></rss>